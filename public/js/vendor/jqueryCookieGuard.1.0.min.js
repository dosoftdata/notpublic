// CookieGuard v1.0 (c) 2012 Ultimateweb LTD <info@ultimateweb.co.uk> All Rights Reserved. GNU General Public License <http://www.gnu.org/licenses/>
(function (a) {
    if (typeof a.cookieguard === "undefined") {
        a.cookieguard = function (b) {
            var c = {
                cookieDeleteDelay: 100,
                messageShowDelay: 1e3,
                messageHideDelay: null,
                answeredHideDelay: 2e3,
                slideSpeed: 500,
                cookiePrefix: "cookieguard_",
                alertOfUnknown: true
            };
            a.cookieguard.settings = a.extend(c, b, {
                cookiesUsed: new Array,
                messageHideTimeout: null
            })
        }
    }
    if (typeof a.cookieguard.cookies === "undefined") {
        a.cookieguard.cookies = function () {}
    }
    if (typeof a.cookieguard.cookies.read === "undefined") {
        a.cookieguard.cookies.read = function (a) {
            var b = a + "=";
            var c = document.cookie.split(";");
            for (var d = 0; d < c.length; d++) {
                var e = c[d];
                while (e.charAt(0) == " ") e = e.substring(1, e.length);
                if (e.indexOf(b) == 0) return e.substring(b.length, e.length)
            }
            return null
        }
    }
    if (typeof a.cookieguard.cookies.create === "undefined") {
        a.cookieguard.cookies.create = function (a, b, c, d, e) {
            if (d == undefined || d == null) d = document.domain;
            if (e == undefined || e == null) e = "/";
            if (c) {
                var f = new Date;
                f.setTime(f.getTime() + c * 24 * 60 * 60 * 1e3);
                var g = "; expires=" + f.toGMTString()
            } else var g = "";
            document.cookie = a + "=" + b + g + "; domain=" + d + "; path=" + e
        }
    }
    if (typeof a.cookieguard.cookies.erase === "undefined") {
        a.cookieguard.cookies.erase = function (b) {
            a.cookieguard.cookies.create(b, "", -1, "", "");
            a.cookieguard.cookies.create(b, "", -1, "");
            a.cookieguard.cookies.create(b, "", -1);
            a.cookieguard.cookies.create(b, "", -1, "." + document.domain);
            if (document.domain.substr(0, 4) == ".www.") a.cookieguard.cookies.create(b, "", -1, document.domain.substr(1));
            if (document.domain.substr(0, 4) == "www.") a.cookieguard.cookies.create(b, "", -1, "." + document.domain.substr(4))
        }
    }
    if (typeof a.cookieguard.cookies.add === "undefined") {
        a.cookieguard.cookies.add = function (b, c, d, e) {
            var f = c.split(",");
            for (var g = 0; g < f.length; g++) {
                a.cookieguard.settings.cookiesUsed.push({
                    name: b,
                    cookie: f[g],
                    description: d,
                    essential: e
                });
                if (e) a.cookieguard.cookies.storeAllowedCookie(f[g])
            }
        }
    }
    if (typeof a.cookieguard.cookies.findUnknownCookies === "undefined") {
        a.cookieguard.cookies.findUnknownCookies = function () {
            var b = a.cookieguard.cookies.getAllowedCookies();
            var c = a.cookieguard.cookies.getDisallowedCookies();
            var d = a.cookieguard.settings.cookiesUsed;
            var e = new Array;
            var f = new Array;
            if (document.cookie && document.cookie != "") {
                var g = document.cookie.split(";");
                for (var h = 0; h < g.length; h++) {
                    var i = g[h].split("=");
                    i[0] = i[0].replace(/^ /, "");
                    e.push(decodeURIComponent(i[0]))
                }
            }
            for (var h = 0; h < e.length; h++) {
                var j = false;
                if (b != null) {
                    for (var k = 0; k < b.length; k++) {
                        if (b[k].indexOf("*") === 0 && b[k].match("\\*$") == "*") {
                            if (e[h].indexOf(b[k].replace("*", "")) > -1) {
                                j = true;
                                break
                            }
                        } else if (b[k].indexOf("*") === 0) {
                            if (e[h].match(b[k].replace("*", "") + "$") == b[k].replace("*", "")) {
                                j = true;
                                break
                            }
                        } else if (b[k].match("\\*$") == "*") {
                            if (e[h].indexOf(b[k].replace("*", "")) === 0) {
                                j = true;
                                break
                            }
                        } else if (b[k] == e[h]) {
                            j = true;
                            break
                        }
                    }
                }
                if (!j) {
                    if (c != null) {
                        for (var k = 0; k < c.length; k++) {
                            if (c[k].indexOf("*") === 0 && c[k].match("\\*$") == "*") {
                                if (e[h].indexOf(c[k].replace("*", "")) > -1) {
                                    j = true;
                                    break
                                }
                            } else if (c[k].indexOf("*") === 0) {
                                if (e[h].match(c[k].replace("*", "") + "$") == c[k].replace("*", "")) {
                                    j = true;
                                    break
                                }
                            } else if (c[k].match("\\*$") == "*") {
                                if (e[h].indexOf(c[k].replace("*", "")) === 0) {
                                    j = true;
                                    break
                                }
                            } else if (c[k] == e[h]) {
                                j = true;
                                break
                            }
                        }
                    }
                }
                if (!j) {
                    if (d.length > 0) {
                        for (var k = 0; k < d.length; k++) {
                            if (d[k].cookie.indexOf("*") === 0 && d[k].cookie.match("\\*$") == "*") {
                                if (e[h].indexOf(d[k].cookie.replace(/\*/g, "")) > -1) {
                                    j = true;
                                    break
                                }
                            } else if (d[k].cookie.indexOf("*") === 0) {
                                if (e[h].match(d[k].cookie.replace(/\*/g, "") + "$") == d[k].cookie.replace(/\*/g, "")) {
                                    j = true;
                                    break
                                }
                            } else if (d[k].cookie.match("\\*$") == "*") {
                                if (e[h].indexOf(d[k].cookie.replace(/\*/g, "")) === 0) {
                                    j = true;
                                    break
                                }
                            } else if (d[k].cookie == e[h]) {
                                j = true;
                                break
                            }
                        }
                    }
                }
                if (!j) if (e[h].indexOf(a.cookieguard.settings.cookiePrefix) === 0) j = true;
                if (!j) {
                    f.push(e[h])
                }
            }
            return f
        }
    }
    if (typeof a.cookieguard.cookies.storeAllowedCookie === "undefined") {
        a.cookieguard.cookies.storeAllowedCookie = function (b) {
            var c = a.cookieguard.cookies.getAllowedCookies();
            var d;
            if (c == null) d = b;
            else {
                d = c.join(",");
                if (a.inArray(b, c) == -1) d = d + "," + b
            }
            a.cookieguard.cookies.create(a.cookieguard.settings.cookiePrefix + "allowedCookies", d, 365)
        }
    }
    if (typeof a.cookieguard.cookies.getAllowedCookies === "undefined") {
        a.cookieguard.cookies.getAllowedCookies = function () {
            var b = a.cookieguard.cookies.read(a.cookieguard.settings.cookiePrefix + "allowedCookies");
            if (b != null) return b.split(",");
            return null
        }
    }
    if (typeof a.cookieguard.cookies.storeDisallowedCookie === "undefined") {
        a.cookieguard.cookies.storeDisallowedCookie = function (b) {
            var c = a.cookieguard.cookies.getDisallowedCookies();
            var d;
            if (c == null) d = b;
            else {
                d = c.join(",");
                if (a.inArray(b, c) == -1) d = d + "," + b
            }
            a.cookieguard.cookies.create(a.cookieguard.settings.cookiePrefix + "disallowedCookies", d, 365)
        }
    }
    if (typeof a.cookieguard.cookies.getDisallowedCookies === "undefined") {
        a.cookieguard.cookies.getDisallowedCookies = function () {
            var b = a.cookieguard.cookies.read(a.cookieguard.settings.cookiePrefix + "disallowedCookies");
            if (b != null) return b.split(",");
            return null
        }
    }
    if (typeof a.cookieguard.eradicateCookies === "undefined") {
        a.cookieguard.eradicateCookies = function () {
            var b = a.cookieguard.cookies.getDisallowedCookies();
            var c = a.cookieguard.cookies.getAllowedCookies();
            var d = new Array;
            if (document.cookie && document.cookie != "") {
                var e = document.cookie.split(";");
                for (var f = 0; f < e.length; f++) {
                    var g = e[f].split("=");
                    g[0] = g[0].replace(/^ /, "");
                    d.push(decodeURIComponent(g[0]))
                }
            }
            for (var f = 0; f < d.length; f++) {
                var h = false;
                if (d[f].indexOf(a.cookieguard.settings.cookiePrefix) === 0) h = true;
                if (!h) {
                    if (c != null) {
                        for (var i = 0; i < c.length; i++) {
                            if (c[i].indexOf("*") === 0 && c[i].match("\\*$") == "*") {
                                if (d[f].indexOf(c[i].replace("*", "")) > -1) {
                                    h = true;
                                    break
                                }
                            } else if (c[i].indexOf("*") === 0) {
                                if (d[f].match(c[i].replace("*", "") + "$") == c[i].replace("*", "")) {
                                    h = true;
                                    break
                                }
                            } else if (c[i].match("\\*$") == "*") {
                                if (d[f].indexOf(c[i].replace("*", "")) === 0) {
                                    h = true;
                                    break
                                }
                            } else if (c[i] == d[f]) {
                                h = true;
                                break
                            }
                        }
                    }
                    if (!h) {
                        if (b != null) {
                            for (var i = 0; i < b.length; i++) {
                                if (b[i].indexOf("*") === 0 && b[i].match("\\*$") == "*") {
                                    if (d[f].indexOf(b[i].replace("*", "")) > -1) {
                                        a.cookieguard.cookies.erase(d[f]);
                                        h = true;
                                        break
                                    }
                                } else if (b[i].indexOf("*") === 0) {
                                    if (d[f].match(b[i].replace("*", "") + "$") == b[i].replace("*", "")) {
                                        a.cookieguard.cookies.erase(d[f]);
                                        h = true;
                                        break
                                    }
                                } else if (b[i].match("\\*$") == "*") {
                                    if (d[f].indexOf(b[i].replace("*", "")) === 0) {
                                        a.cookieguard.cookies.erase(d[f]);
                                        h = true;
                                        break
                                    }
                                } else if (b[i] == d[f]) {
                                    a.cookieguard.cookies.erase(d[f]);
                                    h = true;
                                    break
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    if (typeof a.cookieguard.run === "undefined") {
        a.cookieguard.run = function () {
            setTimeout(function () {
                var b;
                if (a.cookieguard.settings.alertOfUnknown) b = a.cookieguard.cookies.findUnknownCookies();
                else b = new Array;
                if (!a.cookieguard.hasAnswered()) {
                    a.cookieguard.buildMessage(true, a.cookieguard.settings.cookiesUsed, b);
                    a.cookieguard.displayMessage(a.cookieguard.settings.messageShowDelay, a.cookieguard.settings.messageHideDelay)
                } else {
                    a.cookieguard.eradicateCookies();
                    if (b.length > 0) {
                        a.cookieguard.buildMessage(false, null, b);
                        a.cookieguard.displayMessage(a.cookieguard.settings.messageShowDelay, a.cookieguard.settings.messageHideDelay)
                    }
                }
            }, a.cookieguard.settings.cookieDeleteDelay)
        }
    }
    if (typeof a.cookieguard.hasAnswered === "undefined") {
        a.cookieguard.hasAnswered = function () {
            if (a.cookieguard.cookies.read(a.cookieguard.settings.cookiePrefix + "initialised") != null) return true;
            else return false
        }
    }
    if (typeof a.cookieguard.buildMessage === "undefined") {
        a.cookieguard.buildMessage = function (b, c, d) {
            a("body").prepend('<div id="cookieGuardMsg"><div id="cookieGuardMsgInner"><a href="http://cookieguard.eu" target="_blank" id="cookieGuardLink">Click here to get Cookie Guard for your site</a></div></div>');
            if (b) {
                a("#cookieGuardMsgInner").append("This website uses cookies.<br/>");
                if (d.length == 0 && a.cookieguard.hasOnlyEssential()) a("#cookieGuardMsgInner").addClass("onlyEssential").append('<a href="#" id="showCookies">Show</a><a href="#" id="cookieGuardOkay">Okay</a>');
                else a("#cookieGuardMsgInner").append('You may choose to block non-essential and unknown cookies.<a href="#" id="showCookies">Show</a><a href="#" id="authoriseCookies">Allow</a><a href="#" id="denyCookies">Block</a>')
            } else {
                a("#cookieGuardMsgInner").append("Cookie Guard has found new cookies.<br/>");
                a("#cookieGuardMsgInner").append('You may choose to block these cookies.<a href="#" id="showCookies">Show</a><a href="#" id="authoriseCookies">Allow</a><a href="#" id="denyCookies">Block</a>')
            }
            a.cookieguard.buildCookieList(b, c, d);
            a("#cookieGuardOkay").click(function () {
                clearTimeout(a.cookieguard.settings.messageHideTimeout);
                a.cookieguard.hideMessage(0);
                a.cookieguard.cookies.create(a.cookieguard.settings.cookiePrefix + "initialised", "1", 365);
                return false
            });
            a("#showCookies").click(function () {
                if (a(this).text() == "Show") {
                    clearTimeout(a.cookieguard.settings.messageHideTimeout);
                    a("#cookieList").show();
                    a(this).text("Hide");
                    var b = a("#cookieList").outerHeight();
                    a("#cookieList").css({
                        overflow: "hidden",
                        height: 0
                    }).animate({
                        height: b
                    }, a.cookieguard.settings.slideTimer)
                } else if (a(this).text() == "Hide") {
                    a(this).text("Show");
                    a("#cookieList").animate({
                        height: 0
                    }, a.cookieguard.settings.slideTimer, null, function () {
                        a("#cookieList").hide().attr("style", "").removeAttr("style")
                    })
                }
                return false
            });
            a("#authoriseCookies").click(function () {
                clearTimeout(a.cookieguard.settings.messageHideTimeout);
                a("#cookieGuardMsgInner").empty().addClass("msgAllowed").html("The listed cookies have now been allowed on this site.");
                a.cookieguard.hideMessage(a.cookieguard.settings.answeredHideDelay);
                if (c != null) {
                    for (var b = 0; b < c.length; b++) a.cookieguard.cookies.storeAllowedCookie(c[b].cookie)
                }
                if (d != null) {
                    for (var b = 0; b < d.length; b++) a.cookieguard.cookies.storeAllowedCookie(d[b])
                }
                a.cookieguard.cookies.create(a.cookieguard.settings.cookiePrefix + "initialised", "1", 365);
                return false
            });
            a("#denyCookies").click(function () {
                clearTimeout(a.cookieguard.settings.messageHideTimeout);
                a("#cookieGuardMsgInner").empty().addClass("msgDenied").html("Non-essential and unknown cookies have now been blocked on this site.");
                a.cookieguard.hideMessage(a.cookieguard.settings.answeredHideDelay);
                if (c != null) {
                    for (var b = 0; b < c.length; b++) if (c[b].essential == false) a.cookieguard.cookies.storeDisallowedCookie(c[b].cookie)
                }
                if (d != null) {
                    for (var b = 0; b < d.length; b++) a.cookieguard.cookies.storeDisallowedCookie(d[b])
                }
                a.cookieguard.cookies.create(a.cookieguard.settings.cookiePrefix + "initialised", "1", 365);
                a.cookieguard.eradicateCookies();
                return false
            })
        }
    }
    if (typeof a.cookieguard.buildCookieList === "undefined") {
        a.cookieguard.buildCookieList = function (b, c, d) {
            var e = new Array;
            var f = new Array;
            var g = new Array;
            if (c != null) {
                for (var h = 0; h < c.length; h++) {
                    if (a.inArray(c[h].name, g) == -1) {
                        g.push(c[h].name);
                        if (c[h].essential) e.push(c[h]);
                        else f.push(c[h])
                    }
                }
            }
            a("#cookieGuardMsgInner").append('<div id="cookieList"/>');
            if (b) {
                a("#cookieList").append('<div class="cookiesHeader">Essential Cookies <span>- The site owner has indicated that these are essential to the running of the site.</span></div>');
                a("#cookieList").append('<ul class="essentialCookies"/>');
                a("#cookieList > ul.essentialCookies").append('<li><div class="cookieName">Cookie Guard</div><div class="cookieDescription"> - This cookie is essential for storing the status of your cookie choices whilst using this site.</div></li>');
                for (var h = 0; h < e.length; h++) {
                    a("#cookieList > ul.essentialCookies").append('<li><div class="cookieName">' + e[h].name + '</div><div class="cookieDescription"> - ' + e[h].description + "</div></li>")
                }
            }
            if (f.length > 0) {
                a("#cookieList").append('<div class="cookiesHeader">Non-Essential Cookies <span>- The site owner has approved these cookies but you may turn them off.</span></div>');
                a("#cookieList").append('<ul class="knownCookies" />');
                for (var h = 0; h < f.length; h++) {
                    a("#cookieList > ul.knownCookies").append('<li><div class="cookieName">' + f[h].name + '</div><div class="cookieDescription"> - ' + f[h].description + "</div></li>")
                }
            }
            if (d != null && d.length > 0) {
                a("#cookieList").append('<div class="cookiesHeader">Unknown Cookies <span>- The site owner has not approved these cookies.</span></div>');
                a("#cookieList").append('<ul class="unknownCookies" />');
                for (var h = 0; h < d.length; h++) {
                    a("#cookieList > ul.unknownCookies").append('<li><div class="cookieName">' + d[h] + "</div></li>")
                }
            }
        }
    }
    if (typeof a.cookieguard.displayMessage === "undefined") {
        a.cookieguard.displayMessage = function (b, c) {
            a.cookieguard.createCSS();
            a("body").attr("marginTop", a("body").css("marginTop")).css("margin", 0).delay(b).animate({
                marginTop: a("#cookieGuardMsg").outerHeight()
            }, a.cookieguard.settings.slideSpeed);
            a("#cookieGuardMsg").css("top", -a("#cookieGuardMsg").outerHeight());
            a("#cookieGuardMsg").delay(b).show().animate({
                top: 0
            }, a.cookieguard.settings.slideSpeed);
            if (a.cookieguard.settings.messageHideDelay != null) {
                a.cookieguard.settings.messageHideTimeout = setTimeout(function () {
                    a.cookieguard.hideMessage(0)
                }, c)
            }
        }
    }
    if (typeof a.cookieguard.hideMessage === "undefined") {
        a.cookieguard.hideMessage = function (b) {
            a("body").delay(b).animate({
                marginTop: a("body").attr("marginTop")
            }, a.cookieguard.settings.slideSpeed);
            a("#cookieGuardMsg").delay(b).animate({
                top: -a("#cookieGuardMsg").height()
            }, a.cookieguard.settings.slideSpeed, null, function () {
                a("#cookieGuardMsg").remove();
                a("body").attr("style", "").removeAttr("style")
            })
        }
    }
    if (typeof a.cookieguard.hasOnlyEssential === "undefined") {
        a.cookieguard.hasOnlyEssential = function () {
            var b = a.cookieguard.settings.cookiesUsed;
            for (var c = 0; c < b.length; c++) {
                if (!b[c].essential) return false
            }
            return true
        }
    }
    if (typeof a.cookieguard.createCSS == "undefined") {
        a.cookieguard.createCSS = function () {
            var b = '<style id="cookieGuardStyles" type="text/css">';
            b += "#cookieGuardMsg { position: absolute; text-align: left; top: 0; left: 0; width: 100%; display: none; border-bottom: 2px solid #5c5c5c; font-size: 12pt;  color: #333; background: #e2e2e2 url(http://cookieguard.eu/images/cookieguardicon.png) no-repeat 12px 12px; min-height: 50px; z-index:99999; }";
            b += "#cookieGuardMsgInner { padding: 10px 10px 10px 55px; }";
            b += "#cookieGuardMsg a { text-decoration: none; font-weight: normal; font-style: normal; }";
            b += "#cookieGuardLink { position: absolute; bottom: 5px; right: 10px; font-size: 10px; color: #912b2b; }";
            b += "#showCookies { position: absolute; display: none; left: 700px; top: 13px; border: 1px solid #999; background: #d4d4d4; color: #5b5858; padding: 5px 10px; -webkit-border-radius: 3px; -moz-border-radius: 3px; border-radius: 3px; }";
            b += "#showCookies:hover { border-color: #666; }";
            b += "#authoriseCookies, #cookieGuardOkay { position: absolute; display: block; left: 560px; top: 13px; border: 1px solid #a2bf8e; background: #d1ecbe; color: #384c2a; padding: 5px 10px; -webkit-border-radius: 3px; -moz-border-radius: 3px; border-radius: 3px; }";
            b += "#authoriseCookies:hover { border-color: #6f8f59; }";
            b += "#denyCookies { position: absolute; display: none; left: 610px; top: 13px; border: 1px solid #cc9c9c; background: #ecc1c1; color: #7e5353; padding: 5px 10px; -webkit-border-radius: 3px; -moz-border-radius: 3px; border-radius: 3px; }";
            b += "#denyCookies:hover { border-color: #9e6a6a;}";
            b += "#cookieList { display: none; padding: 10px 60px 0 0; }";
            b += "#cookieList ul { list-style: none; padding-left: 20px; }";
            b += "#cookieList li { padding: 5px 0; }";
            b += ".cookieName { font-weight: bold; display: inline; }";
            b += ".cookieDescription { display: inline; }";
            b += ".cookiesHeader { font-weight: bold; border-bottom: 1px solid #222; color: #222; margin-bottom: 3px; padding-top: 10px; }";
            b += ".cookiesHeader span { font-weight: normal; font-size: 11px; }";
            b += "#cookieGuardMsgInner.msgAllowed, #cookieGuardMsgInner.msgDenied, #cookieGuardMsgInner.onlyEssential { padding-top: 17px; }";
            b += "</style>";
            a("head").append(b)
        }
    }
})(jQuery)